2022-02-19 02:17:21 info: ------------------------------------------------------
2022-02-19 02:17:21 info: >>> Running Unit Test `ex1-doubleEvenNumbers.test` <<<
2022-02-19 02:17:21 info: ------------------------------------------------------
2022-02-19 02:17:21 info: Exercise has not yet been modified
2022-02-19 02:17:24 info: All unit tests passed.
2022-02-19 02:17:26 error: *** Spell Checker Report ***


2022-02-19 02:29:01 info: ------------------------------------------------------
2022-02-19 02:29:01 info: >>> Running Unit Test `ex1-doubleEvenNumbers.test` <<<
2022-02-19 02:29:01 info: ------------------------------------------------------
2022-02-19 02:29:04 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-doubleEvenNumbers.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex1-doubleEvenNumbers.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: /Users/edwardabboud/Documents/Coding/My Code/Hack Your Future/Javascript/Homework-Repo/Homework-class36/1-JavaScript/Week4/homework/ex1-doubleEvenNumbers.test.js: Unexpected token (35:0)

      33 |   expect(actual).toEqual(expected);
      34 | });
    > 35 |
         | ^

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1323:22)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)
      at Parser.parseUpdate (node_modules/@babel/parser/src/parser/expression.js:648:21)
      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:619:23)
      at Parser.parseMaybeUnaryOrPrivate (node_modules/@babel/parser/src/parser/expression.js:372:14)
      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:382:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.652 s, estimated 1 s
Ran all test suites matching /ex1-doubleEvenNumbers.test.js/i.
2022-02-19 02:29:06 error: *** Spell Checker Report ***


2022-02-19 02:33:21 info: ------------------------------------------------------
2022-02-19 02:33:21 info: >>> Running Unit Test `ex1-doubleEvenNumbers.test` <<<
2022-02-19 02:33:21 info: ------------------------------------------------------
2022-02-19 02:33:23 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-doubleEvenNumbers.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex1-doubleEvenNumbers.test.js
  ✕ doubleEvenNumbers should take the even numbers and double them (8 ms)

  ● doubleEvenNumbers should take the even numbers and double them

    expect(received).toEqual(expected) // deep equality

    Expected: [4, 8]
    Received: undefined

      29 |   const actual = doubleEvenNumbers([1, 2, 3, 4]);
      30 |   const expected = [4, 8];
    > 31 |   expect(actual).toEqual(expected);
         |                  ^
      32 | });
      33 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex1-doubleEvenNumbers.test.js:31:18)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 total
Snapshots:   0 total
Time:        0.468 s
Ran all test suites matching /ex1-doubleEvenNumbers.test.js/i.
2022-02-19 02:33:25 error: *** Spell Checker Report ***


2022-02-19 02:36:51 info: ------------------------------------------------------
2022-02-19 02:36:51 info: >>> Running Unit Test `ex1-doubleEvenNumbers.test` <<<
2022-02-19 02:36:51 info: ------------------------------------------------------
2022-02-19 02:36:53 info: All unit tests passed.
2022-02-19 02:36:54 error: *** Spell Checker Report ***


2022-02-19 02:52:17 info: ------------------------------------------------------
2022-02-19 02:52:17 info: >>> Running Unit Test `ex1-doubleEvenNumbers.test` <<<
2022-02-19 02:52:17 info: ------------------------------------------------------
2022-02-19 02:52:19 info: All unit tests passed.
2022-02-19 02:52:20 error: *** Spell Checker Report ***


2022-02-19 03:01:08 info: -------------------------------------------------
2022-02-19 03:01:08 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2022-02-19 03:01:08 info: -------------------------------------------------
2022-02-19 03:01:11 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-mondaysWorth.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js
  computeEarnings
    ✓ should take two parameters (3 ms)
    ✕ should compute the earnings as a formatted Euro amount (3 ms)

  ● computeEarnings › should compute the earnings as a formatted Euro amount

    expect(received).toBe(expected) // Object.is equality

    Expected: "€187.50"
    Received: undefined

      47 |     const result = computeEarnings(mondayTasks, hourlyRate);
      48 |     const expected = '€187.50';
    > 49 |     expect(result).toBe(expected);
         |                    ^
      50 |   });
      51 | });
      52 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:49:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.766 s
Ran all test suites matching /ex2-mondaysWorth.test.js/i.
2022-02-19 03:01:13 error: *** Spell Checker Report ***


2022-02-20 12:06:20 info: -------------------------------------------------
2022-02-20 12:06:20 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2022-02-20 12:06:20 info: -------------------------------------------------
2022-02-20 12:06:23 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-mondaysWorth.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js
  computeEarnings
    ✓ should take two parameters (2 ms)
    ✕ should compute the earnings as a formatted Euro amount (4 ms)

  ● computeEarnings › should compute the earnings as a formatted Euro amount

    expect(received).toBe(expected) // Object.is equality

    Expected: "€187.50"
    Received: "€187.5"

      53 |     const result = computeEarnings(mondayTasks, hourlyRate);
      54 |     const expected = '€187.50';
    > 55 |     expect(result).toBe(expected);
         |                    ^
      56 |   });
      57 | });
      58 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:55:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.801 s, estimated 1 s
Ran all test suites matching /ex2-mondaysWorth.test.js/i.
2022-02-20 12:06:26 error: *** Spell Checker Report ***


2022-02-20 12:09:17 info: -------------------------------------------------
2022-02-20 12:09:17 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2022-02-20 12:09:17 info: -------------------------------------------------
2022-02-20 12:09:20 info: All unit tests passed.
2022-02-20 12:09:22 error: *** Spell Checker Report ***


2022-02-20 12:13:23 info: -------------------------------------------------
2022-02-20 12:13:23 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2022-02-20 12:13:23 info: -------------------------------------------------
2022-02-20 12:13:26 info: All unit tests passed.
2022-02-20 12:13:29 error: *** Spell Checker Report ***


2022-02-20 10:25:10 info: -------------------------------------------------
2022-02-20 10:25:10 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2022-02-20 10:25:10 info: -------------------------------------------------
2022-02-20 10:25:13 info: All unit tests passed.
2022-02-20 10:25:15 error: *** Spell Checker Report ***


2022-02-20 10:38:46 info: -------------------------------------------------
2022-02-20 10:38:46 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 10:38:46 info: -------------------------------------------------
2022-02-20 10:38:48 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✕ should take two parameters (4 ms)
    ✕ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should take two parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 0

      34 | describe('sanitizeFruitBasket', () => {
      35 |   test('should take two parameters', () => {
    > 36 |     expect(sanitizeFruitBasket.length).toBe(2);
         |                                        ^
      37 |   });
      38 |
      39 |   test('should not modify the original `fruitBasket` array', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:36:40)

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      41 |     const originalFruitBasketContents = [...fruitBasket];
      42 |     // TODO replace next line with your code
    > 43 |     expect(false).toBe(true);
         |                   ^
      44 |   });
      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:43:19)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      47 |     // TODO replace next line with your code
    > 48 |     expect(false).toBe(true);
         |                   ^
      49 |   });
      50 | });
      51 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:48:19)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 3 total
Snapshots:   0 total
Time:        0.462 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 10:38:49 error: *** Spell Checker Report ***


2022-02-20 10:39:28 info: -------------------------------------------------
2022-02-20 10:39:28 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 10:39:28 info: -------------------------------------------------
2022-02-20 10:39:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (2 ms)
    ✕ should not modify the original `fruitBasket` array (2 ms)
    ✕ should return a new array that does not include the unwanted `lemon`

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      41 |     const originalFruitBasketContents = [...fruitBasket];
      42 |     // TODO replace next line with your code
    > 43 |     expect(false).toBe(true);
         |                   ^
      44 |   });
      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:43:19)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      47 |     // TODO replace next line with your code
    > 48 |     expect(false).toBe(true);
         |                   ^
      49 |   });
      50 | });
      51 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:48:19)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.453 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 10:39:32 error: *** Spell Checker Report ***


2022-02-20 11:07:53 info: -------------------------------------------------
2022-02-20 11:07:53 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:07:53 info: -------------------------------------------------
2022-02-20 11:07:55 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (2 ms)
    ✓ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    ReferenceError: newBasket is not defined

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(newBasket).not.toEqual('lemon');
         |            ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.509 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:07:56 error: *** Spell Checker Report ***


2022-02-20 11:08:52 info: -------------------------------------------------
2022-02-20 11:08:52 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:08:52 info: -------------------------------------------------
2022-02-20 11:08:54 info: All unit tests passed.
2022-02-20 11:08:56 error: *** Spell Checker Report ***


2022-02-20 11:19:14 info: -------------------------------------------------
2022-02-20 11:19:14 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:19:14 info: -------------------------------------------------
2022-02-20 11:19:16 info: All unit tests passed.
2022-02-20 11:19:18 error: *** Spell Checker Report ***


2022-02-20 11:22:56 info: -------------------------------------------------
2022-02-20 11:22:56 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:22:56 info: -------------------------------------------------
2022-02-20 11:22:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (11 ms)
    ✓ should not modify the original `fruitBasket` array (2 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (12 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).not.toMatch(expected)

    Matcher error: received value must be a string

    Received has value: undefined

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(sanitizeFruitBasket.newBasket).not.toMatch('lemon');
         |                                               ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:47)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.97 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:23:01 error: *** Spell Checker Report ***


2022-02-20 11:23:55 info: -------------------------------------------------
2022-02-20 11:23:55 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:23:55 info: -------------------------------------------------
2022-02-20 11:23:57 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (3 ms)
    ✓ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (3 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).not.toMatch(expected)

    Matcher error: received value must be a string

    Received has value: undefined

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(sanitizeFruitBasket.newBasket).not.toMatch(/lemon/);
         |                                               ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:47)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.537 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:23:59 error: *** Spell Checker Report ***


2022-02-20 11:24:25 info: -------------------------------------------------
2022-02-20 11:24:25 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:24:25 info: -------------------------------------------------
2022-02-20 11:24:27 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (2 ms)
    ✓ should not modify the original `fruitBasket` array
    ✕ should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).not.toMatch(expected)

    Matcher error: received value must be a string

    Received has type:  function
    Received has value: [Function sanitizeFruitBasket]

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(sanitizeFruitBasket).not.toMatch(/lemon/);
         |                                     ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:37)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.456 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:24:28 error: *** Spell Checker Report ***


2022-02-20 11:25:04 info: -------------------------------------------------
2022-02-20 11:25:04 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:25:04 info: -------------------------------------------------
2022-02-20 11:25:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (2 ms)
    ✓ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    ReferenceError: newBasket is not defined

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(newBasket).not.toMatch(/lemon/);
         |            ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.468 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:25:07 error: *** Spell Checker Report ***


2022-02-20 11:25:38 info: -------------------------------------------------
2022-02-20 11:25:38 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:25:38 info: -------------------------------------------------
2022-02-20 11:25:40 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (2 ms)
    ✓ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (2 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).not.toMatch(expected)

    Matcher error: received value must be a string

    Received has value: undefined

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(sanitizeFruitBasket.newBasket).not.toMatch(/lemon/);
         |                                               ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:47)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.38 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:25:41 error: *** Spell Checker Report ***


2022-02-20 11:26:30 info: -------------------------------------------------
2022-02-20 11:26:30 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:26:30 info: -------------------------------------------------
2022-02-20 11:26:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (2 ms)
    ✓ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (2 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).not.toMatch(expected)

    Matcher error: received value must be a string

    Received has type:  array
    Received has value: ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(fruitBasket).not.toMatch(/lemon/);
         |                             ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:29)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.469 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:26:34 error: *** Spell Checker Report ***


2022-02-20 11:27:26 info: -------------------------------------------------
2022-02-20 11:27:26 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:27:26 info: -------------------------------------------------
2022-02-20 11:27:28 info: All unit tests passed.
2022-02-20 11:27:29 error: *** Spell Checker Report ***


2022-02-20 11:28:02 info: -------------------------------------------------
2022-02-20 11:28:02 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:28:02 info: -------------------------------------------------
2022-02-20 11:28:04 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (2 ms)
    ✓ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).not.toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(sanitizeFruitBasket.newBasket).not.toContain(/lemon/);
         |                                               ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:47)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.449 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:28:06 error: *** Spell Checker Report ***


2022-02-20 11:28:36 info: -------------------------------------------------
2022-02-20 11:28:36 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:28:36 info: -------------------------------------------------
2022-02-20 11:28:38 info: All unit tests passed.
2022-02-20 11:28:39 error: *** Spell Checker Report ***


2022-02-20 11:29:01 info: -------------------------------------------------
2022-02-20 11:29:01 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:29:01 info: -------------------------------------------------
2022-02-20 11:29:03 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (2 ms)
    ✓ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (2 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).not.toContain(expected) // indexOf

    Expected value: not "lemon"
    Received array:     ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(fruitBasket).not.toContain('lemon');
         |                             ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:29)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.471 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:29:05 error: *** Spell Checker Report ***


2022-02-20 11:30:06 info: -------------------------------------------------
2022-02-20 11:30:06 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:30:06 info: -------------------------------------------------
2022-02-20 11:30:08 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (2 ms)
    ✓ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).not.toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(sanitizeFruitBasket.newBasket).not.toContain('lemon');
         |                                               ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:47)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.455 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:30:10 error: *** Spell Checker Report ***


2022-02-20 11:40:40 info: -------------------------------------------------
2022-02-20 11:40:40 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:40:40 info: -------------------------------------------------
2022-02-20 11:40:42 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  ● Test suite failed to run

    SyntaxError: /Users/edwardabboud/Documents/Coding/My Code/Hack Your Future/Javascript/Homework-Repo/Homework-class36/1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js: Unexpected token, expected "(" (47:19)

      45 |
      46 |   test('should return a new array that does not include the unwanted `lemon`', () => {
    > 47 |     expect(function.sanitizeFruitBasket).not.toContain('lemon');
         |                    ^
      48 |   });
      49 | });
      50 |

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.expect (node_modules/@babel/parser/src/parser/util.js:150:28)
      at Parser.parseFunctionParams (node_modules/@babel/parser/src/parser/statement.js:1227:10)
      at Parser.parseFunction (node_modules/@babel/parser/src/parser/statement.js:1193:10)
      at Parser.parseFunctionOrFunctionSent (node_modules/@babel/parser/src/parser/expression.js:1544:17)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1151:21)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.589 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:40:44 error: *** Spell Checker Report ***


2022-02-20 11:42:23 info: -------------------------------------------------
2022-02-20 11:42:23 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:42:23 info: -------------------------------------------------
2022-02-20 11:42:25 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    ✓ should take two parameters (3 ms)
    ✓ should not modify the original `fruitBasket` array (1 ms)
    ✕ should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    TypeError: Cannot read properties of undefined (reading 'filter')

      28 | // ! Function under test
      29 | function sanitizeFruitBasket(fruitBasket, lemon) {
    > 30 |   const newBasket = [...fruitBasket.filter((item) => item !== lemon)];
         |                                     ^
      31 |   return newBasket;
      32 | }
      33 |

      at sanitizeFruitBasket (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:30:37)
      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.494 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-02-20 11:42:27 error: *** Spell Checker Report ***


2022-02-20 11:43:10 info: -------------------------------------------------
2022-02-20 11:43:10 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 11:43:10 info: -------------------------------------------------
2022-02-20 11:43:12 info: All unit tests passed.
2022-02-20 11:43:14 error: *** Spell Checker Report ***


2022-02-20 06:43:28 info: -------------------------------------------------
2022-02-20 06:43:28 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-20 06:43:28 info: -------------------------------------------------
2022-02-20 06:43:31 info: All unit tests passed.
2022-02-20 06:43:36 error: *** Spell Checker Report ***


2022-02-20 07:10:04 info: ------------------------------------------
2022-02-20 07:10:04 info: >>> Running Unit Test `ex4-observable` <<<
2022-02-20 07:10:04 info: ------------------------------------------
2022-02-20 07:10:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-observable.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex4-observable/ex4-observable.test.js
  createObservable
    ✓ should exist and be a function (2 ms)
    ✓ should return an object with `subscribe` and a `notify` function properties (1 ms)
    ✕ should notify all subscribers of any notification (2 ms)

  ● createObservable › should notify all subscribers of any notification

    TypeError: subscribers.pugh is not a function

      18 |   return {
      19 |     subscribe: function (subscriber) {
    > 20 |       subscribers.pugh(subscriber);
         |                   ^
      21 |     },
      22 |     notify: function (message) {
      23 |       subscribers.forEach((subscriber) => subscriber(message));

      at Object.subscribe (1-JavaScript/Week4/homework/ex4-observable/ex4-observable.js:20:19)
      at Object.<anonymous> (1-JavaScript/Week4/homework/ex4-observable/ex4-observable.test.js:23:16)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.505 s
Ran all test suites matching /ex4-observable.test.js/i.
2022-02-20 07:10:08 error: *** Spell Checker Report ***


2022-02-20 07:10:21 info: ------------------------------------------
2022-02-20 07:10:21 info: >>> Running Unit Test `ex4-observable` <<<
2022-02-20 07:10:21 info: ------------------------------------------
2022-02-20 07:10:23 info: All unit tests passed.
2022-02-20 07:10:24 error: *** Spell Checker Report ***


2022-02-20 07:12:31 info: ------------------------------------------
2022-02-20 07:12:31 info: >>> Running Unit Test `ex4-observable` <<<
2022-02-20 07:12:31 info: ------------------------------------------
2022-02-20 07:12:33 info: All unit tests passed.
2022-02-20 07:12:35 error: *** Spell Checker Report ***


2022-02-20 07:12:46 info: ------------------------------------------
2022-02-20 07:12:46 info: >>> Running Unit Test `ex4-observable` <<<
2022-02-20 07:12:46 info: ------------------------------------------
2022-02-20 07:12:49 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-observable.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex4-observable/ex4-observable.test.js
  createObservable
    ✓ should exist and be a function (2 ms)
    ✓ should return an object with `subscribe` and a `notify` function properties
    ✕ should notify all subscribers of any notification (3 ms)

  ● createObservable › should notify all subscribers of any notification

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Hi!"

    Number of calls: 0

      28 |
      29 |     // Assert that both listeners have been called with the Hi! message
    > 30 |     expect(listener1).toHaveBeenCalledWith('Hi!');
         |                       ^
      31 |     expect(listener2).toHaveBeenCalledWith('Hi!');
      32 |   });
      33 | });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex4-observable/ex4-observable.test.js:30:23)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.588 s, estimated 1 s
Ran all test suites matching /ex4-observable.test.js/i.
2022-02-20 07:12:51 error: *** Spell Checker Report ***


2022-02-20 07:13:01 info: ------------------------------------------
2022-02-20 07:13:01 info: >>> Running Unit Test `ex4-observable` <<<
2022-02-20 07:13:01 info: ------------------------------------------
2022-02-20 07:13:03 info: All unit tests passed.
2022-02-20 07:13:04 error: *** Spell Checker Report ***


2022-02-20 07:14:05 info: ------------------------------------------
2022-02-20 07:14:05 info: >>> Running Unit Test `ex4-observable` <<<
2022-02-20 07:14:05 info: ------------------------------------------
2022-02-20 07:14:07 info: All unit tests passed.
2022-02-20 07:14:09 error: *** Spell Checker Report ***


2022-02-20 07:48:33 info: --------------------------------------
2022-02-20 07:48:33 info: >>> Running Unit Test `ex5-wallet` <<<
2022-02-20 07:48:33 info: --------------------------------------
2022-02-20 07:48:35 info: All unit tests passed.
2022-02-20 07:48:37 error: *** Spell Checker Report ***


2022-02-25 12:40:26 info: -------------------------------------------------
2022-02-25 12:40:26 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-02-25 12:40:26 info: -------------------------------------------------
2022-02-25 12:40:29 info: All unit tests passed.
2022-02-25 12:40:31 error: *** Spell Checker Report ***


2022-02-25 04:16:17 info: ------------------------------------------
2022-02-25 04:16:17 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:16:17 info: ------------------------------------------
2022-02-25 04:16:17 info: Exercise has not yet been modified
2022-02-25 04:16:20 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (7 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.763 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:16:22 error: *** Spell Checker Report ***


2022-02-25 04:18:32 info: ------------------------------------------
2022-02-25 04:18:32 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:18:32 info: ------------------------------------------
2022-02-25 04:18:35 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (22 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (2 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.779 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:18:37 error: *** Spell Checker Report ***


2022-02-25 04:18:50 info: ------------------------------------------
2022-02-25 04:18:50 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:18:50 info: ------------------------------------------
2022-02-25 04:18:53 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (3 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.635 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:18:55 error: *** Spell Checker Report ***


2022-02-25 04:20:05 info: ------------------------------------------
2022-02-25 04:20:05 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:20:05 info: ------------------------------------------
2022-02-25 04:20:08 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (6 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.839 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:20:10 error: *** Spell Checker Report ***


2022-02-25 04:20:19 info: ------------------------------------------
2022-02-25 04:20:19 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:20:19 info: ------------------------------------------
2022-02-25 04:20:22 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (5 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.613 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:20:24 error: *** Spell Checker Report ***


2022-02-25 04:21:41 info: ------------------------------------------
2022-02-25 04:21:41 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:21:41 info: ------------------------------------------
2022-02-25 04:21:43 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (8 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.754 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:21:45 error: *** Spell Checker Report ***


2022-02-25 04:32:54 info: ------------------------------------------
2022-02-25 04:32:54 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:32:54 info: ------------------------------------------
2022-02-25 04:32:56 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (5 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (7 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.646 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:32:59 error: *** Spell Checker Report ***


2022-02-25 04:46:42 info: ------------------------------------------
2022-02-25 04:46:42 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:46:42 info: ------------------------------------------
2022-02-25 04:46:46 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (4 ms)
    ✓ a living cell with zero living neighbors should die and have its life time reset to zero (2 ms)
    ✓ a living cell with one living neighbor should die and have its life time reset to zero
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (3 ms)
    ✓ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a dead cell with two living neighbors should remain dead and have a life time of zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      202 |
      203 |     expect(midCell.alive).toBe(false);
    > 204 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      205 |   });
      206 |
      207 |   test('a dead cell with three living neighbors should come alive and have its lifeTime reset to one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:204:30)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.708 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:46:47 error: *** Spell Checker Report ***


2022-02-25 04:52:10 info: ------------------------------------------
2022-02-25 04:52:10 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:52:10 info: ------------------------------------------
2022-02-25 04:52:13 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (3 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (7 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (3 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (3 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 2

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 2

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 2

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 7 passed, 11 total
Snapshots:   0 total
Time:        1.048 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:52:15 error: *** Spell Checker Report ***


2022-02-25 04:54:13 info: ------------------------------------------
2022-02-25 04:54:13 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:54:13 info: ------------------------------------------
2022-02-25 04:54:16 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (7 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (3 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.815 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:54:18 error: *** Spell Checker Report ***


2022-02-25 04:55:08 info: ------------------------------------------
2022-02-25 04:55:08 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:55:08 info: ------------------------------------------
2022-02-25 04:55:11 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.647 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:55:14 error: *** Spell Checker Report ***


2022-02-25 04:57:38 info: ------------------------------------------
2022-02-25 04:57:38 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:57:38 info: ------------------------------------------
2022-02-25 04:57:40 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (7 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      224 |     game.updateGrid();
      225 |
    > 226 |     expect(midCell.alive).toBe(true);
          |                           ^
      227 |     expect(midCell.lifeTime).toBe(1);
      228 |   });
      229 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:226:27)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 7 passed, 11 total
Snapshots:   0 total
Time:        0.675 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:57:42 error: *** Spell Checker Report ***


2022-02-25 04:57:56 info: ------------------------------------------
2022-02-25 04:57:56 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:57:56 info: ------------------------------------------
2022-02-25 04:57:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (3 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (8 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (2 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.618 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:58:03 error: *** Spell Checker Report ***


2022-02-25 04:59:01 info: ------------------------------------------
2022-02-25 04:59:01 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 04:59:01 info: ------------------------------------------
2022-02-25 04:59:04 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✓ a living cell with zero living neighbors should die and have its life time reset to zero (3 ms)
    ✓ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (2 ms)
    ✓ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✕ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a dead cell with two living neighbors should remain dead and have a life time of zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      202 |
      203 |     expect(midCell.alive).toBe(false);
    > 204 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      205 |   });
      206 |
      207 |   test('a dead cell with three living neighbors should come alive and have its lifeTime reset to one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:204:30)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.671 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 04:59:06 error: *** Spell Checker Report ***


2022-02-25 05:00:23 info: ------------------------------------------
2022-02-25 05:00:23 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 05:00:23 info: ------------------------------------------
2022-02-25 05:00:26 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✓ a living cell with zero living neighbors should die and have its life time reset to zero (2 ms)
    ✓ a living cell with one living neighbor should die and have its life time reset to zero
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (3 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one
    ✓ a living cell with four living neighbors should die and have its life time reset to zero
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 10 passed, 11 total
Snapshots:   0 total
Time:        0.584 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 05:00:28 error: *** Spell Checker Report ***


2022-02-25 05:01:32 info: ------------------------------------------
2022-02-25 05:01:32 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 05:01:32 info: ------------------------------------------
2022-02-25 05:01:34 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✓ a living cell with zero living neighbors should die and have its life time reset to zero (2 ms)
    ✓ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (3 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 10 passed, 11 total
Snapshots:   0 total
Time:        0.628 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 05:01:36 error: *** Spell Checker Report ***


2022-02-25 05:07:28 info: ------------------------------------------
2022-02-25 05:07:28 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 05:07:28 info: ------------------------------------------
2022-02-25 05:07:31 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✓ a living cell with zero living neighbors should die and have its life time reset to zero (3 ms)
    ✓ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (9 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (3 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 3

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a dead cell with two living neighbors should remain dead and have a life time of zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 2

      202 |
      203 |     expect(midCell.alive).toBe(false);
    > 204 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      205 |   });
      206 |
      207 |   test('a dead cell with three living neighbors should come alive and have its lifeTime reset to one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:204:30)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.68 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 05:07:33 error: *** Spell Checker Report ***


2022-02-25 05:08:18 info: ------------------------------------------
2022-02-25 05:08:18 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 05:08:18 info: ------------------------------------------
2022-02-25 05:08:22 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✓ a living cell with zero living neighbors should die and have its life time reset to zero (2 ms)
    ✓ a living cell with one living neighbor should die and have its life time reset to zero
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (3 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 10 passed, 11 total
Snapshots:   0 total
Time:        0.628 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-02-25 05:08:25 error: *** Spell Checker Report ***


2022-02-25 05:11:22 info: ------------------------------------------
2022-02-25 05:11:22 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 05:11:22 info: ------------------------------------------
2022-02-25 05:11:24 info: All unit tests passed.
2022-02-25 05:11:26 error: *** Spell Checker Report ***


2022-02-25 05:18:40 info: ------------------------------------------
2022-02-25 05:18:40 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 05:18:40 info: ------------------------------------------
2022-02-25 05:18:43 info: All unit tests passed.
2022-02-25 05:18:45 error: *** Spell Checker Report ***


2022-02-25 05:21:11 info: ------------------------------------------
2022-02-25 05:21:11 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-02-25 05:21:11 info: ------------------------------------------
2022-02-25 05:21:14 info: All unit tests passed.
2022-02-25 05:21:16 error: *** Spell Checker Report ***


2022-02-26 09:29:12 info: ----------------------------------------
2022-02-26 09:29:12 info: >>> Running Unit Test `ex1-bookList` <<<
2022-02-26 09:29:12 info: ----------------------------------------
2022-02-26 09:29:18 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js
  Generated HTML
    ✓ HTML should be syntactically valid (115 ms)
    ✕ should have all TODO comments removed (2 ms)
    ✕ should contain a <ul> that is a child of <div id="bookList"> (2 ms)
    ✕ should contain a <ul> with 3 <li> elements (2 ms)
    ✕ should contain an <li> with title and author for each book of the `myBooks` array (1 ms)
    ✕ should contain an <img> element for each book (1 ms)

  ● Generated HTML › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● Generated HTML › should contain a <ul> that is a child of <div id="bookList">

    expect(received).toBeTruthy()

    Received: null

      46 |   test('should contain a <ul> that is a child of <div id="bookList">', () => {
      47 |     const ul = document.querySelector('div[id=bookList] > ul');
    > 48 |     expect(ul).toBeTruthy();
         |                ^
      49 |   });
      50 |
      51 |   test('should contain a <ul> with 3 <li> elements', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:48:16)

  ● Generated HTML › should contain a <ul> with 3 <li> elements

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 0

      52 |     const nodeList = document.querySelectorAll('ul > li');
      53 |     const result = nodeList ? nodeList.length : 0;
    > 54 |     expect(result).toBe(3);
         |                    ^
      55 |   });
      56 |
      57 |   test('should contain an <li> with title and author for each book of the `myBooks` array', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:54:20)

  ● Generated HTML › should contain an <li> with title and author for each book of the `myBooks` array

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "The Design of Everyday Things"
    Received: ""

      63 |       : '';
      64 |     state.titlesAndAuthors.forEach((string) =>
    > 65 |       expect(result).toEqual(expect.stringContaining(string))
         |                      ^
      66 |     );
      67 |   });
      68 |

      at forEach (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:65:22)
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:64:28)

  ● Generated HTML › should contain an <img> element for each book

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 0

      70 |     const nodeList = document.querySelectorAll('li img');
      71 |     const result = nodeList ? nodeList.length : 0;
    > 72 |     expect(result).toBe(3);
         |                    ^
      73 |   });
      74 | });
      75 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:72:20)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 1 passed, 6 total
Snapshots:   0 total
Time:        3.532 s
Ran all test suites matching /ex1-bookList.test.js/i.
2022-02-26 09:29:20 error: *** Spell Checker Report ***


2022-02-26 09:55:01 info: ----------------------------------------
2022-02-26 09:55:01 info: >>> Running Unit Test `ex1-bookList` <<<
2022-02-26 09:55:01 info: ----------------------------------------
2022-02-26 09:55:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js
  Generated HTML
    ✓ HTML should be syntactically valid (135 ms)
    ✕ should have all TODO comments removed (2 ms)
    ✕ should contain a <ul> that is a child of <div id="bookList"> (2 ms)
    ✕ should contain a <ul> with 3 <li> elements (3 ms)
    ✕ should contain an <li> with title and author for each book of the `myBooks` array (2 ms)
    ✕ should contain an <img> element for each book (1 ms)

  ● Generated HTML › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● Generated HTML › should contain a <ul> that is a child of <div id="bookList">

    expect(received).toBeTruthy()

    Received: null

      46 |   test('should contain a <ul> that is a child of <div id="bookList">', () => {
      47 |     const ul = document.querySelector('div[id=bookList] > ul');
    > 48 |     expect(ul).toBeTruthy();
         |                ^
      49 |   });
      50 |
      51 |   test('should contain a <ul> with 3 <li> elements', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:48:16)

  ● Generated HTML › should contain a <ul> with 3 <li> elements

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 0

      52 |     const nodeList = document.querySelectorAll('ul > li');
      53 |     const result = nodeList ? nodeList.length : 0;
    > 54 |     expect(result).toBe(3);
         |                    ^
      55 |   });
      56 |
      57 |   test('should contain an <li> with title and author for each book of the `myBooks` array', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:54:20)

  ● Generated HTML › should contain an <li> with title and author for each book of the `myBooks` array

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "The Design of Everyday Things"
    Received: ""

      63 |       : '';
      64 |     state.titlesAndAuthors.forEach((string) =>
    > 65 |       expect(result).toEqual(expect.stringContaining(string))
         |                      ^
      66 |     );
      67 |   });
      68 |

      at forEach (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:65:22)
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:64:28)

  ● Generated HTML › should contain an <img> element for each book

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 0

      70 |     const nodeList = document.querySelectorAll('li img');
      71 |     const result = nodeList ? nodeList.length : 0;
    > 72 |     expect(result).toBe(3);
         |                    ^
      73 |   });
      74 | });
      75 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:72:20)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 1 passed, 6 total
Snapshots:   0 total
Time:        3.354 s, estimated 4 s
Ran all test suites matching /ex1-bookList.test.js/i.
2022-02-26 09:55:09 error: *** Spell Checker Report ***


2022-02-26 09:57:57 info: ----------------------------------------
2022-02-26 09:57:57 info: >>> Running Unit Test `ex1-bookList` <<<
2022-02-26 09:57:57 info: ----------------------------------------
2022-02-26 09:58:02 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js
  Generated HTML
    ✓ HTML should be syntactically valid (121 ms)
    ✓ should have all TODO comments removed
    ✕ should contain a <ul> that is a child of <div id="bookList"> (6 ms)
    ✕ should contain a <ul> with 3 <li> elements (4 ms)
    ✕ should contain an <li> with title and author for each book of the `myBooks` array (2 ms)
    ✕ should contain an <img> element for each book (1 ms)

  ● Generated HTML › should contain a <ul> that is a child of <div id="bookList">

    expect(received).toBeTruthy()

    Received: null

      46 |   test('should contain a <ul> that is a child of <div id="bookList">', () => {
      47 |     const ul = document.querySelector('div[id=bookList] > ul');
    > 48 |     expect(ul).toBeTruthy();
         |                ^
      49 |   });
      50 |
      51 |   test('should contain a <ul> with 3 <li> elements', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:48:16)

  ● Generated HTML › should contain a <ul> with 3 <li> elements

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 0

      52 |     const nodeList = document.querySelectorAll('ul > li');
      53 |     const result = nodeList ? nodeList.length : 0;
    > 54 |     expect(result).toBe(3);
         |                    ^
      55 |   });
      56 |
      57 |   test('should contain an <li> with title and author for each book of the `myBooks` array', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:54:20)

  ● Generated HTML › should contain an <li> with title and author for each book of the `myBooks` array

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "The Design of Everyday Things"
    Received: ""

      63 |       : '';
      64 |     state.titlesAndAuthors.forEach((string) =>
    > 65 |       expect(result).toEqual(expect.stringContaining(string))
         |                      ^
      66 |     );
      67 |   });
      68 |

      at forEach (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:65:22)
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:64:28)

  ● Generated HTML › should contain an <img> element for each book

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 0

      70 |     const nodeList = document.querySelectorAll('li img');
      71 |     const result = nodeList ? nodeList.length : 0;
    > 72 |     expect(result).toBe(3);
         |                    ^
      73 |   });
      74 | });
      75 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:72:20)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 2 passed, 6 total
Snapshots:   0 total
Time:        3.289 s, estimated 4 s
Ran all test suites matching /ex1-bookList.test.js/i.
2022-02-26 09:58:04 error: *** Spell Checker Report ***


2022-02-26 10:13:07 info: ----------------------------------------
2022-02-26 10:13:07 info: >>> Running Unit Test `ex1-bookList` <<<
2022-02-26 10:13:07 info: ----------------------------------------
2022-02-26 10:13:16 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js
  Generated HTML
    ✕ HTML should be syntactically valid (606 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ should contain a <ul> that is a child of <div id="bookList"> (6 ms)
    ✓ should contain a <ul> with 3 <li> elements (3 ms)
    ✓ should contain an <li> with title and author for each book of the `myBooks` array (7 ms)
    ✓ should contain an <img> element for each book (2 ms)

  ● Generated HTML › HTML should be syntactically valid

    expect(received).toBe(expected) // Object.is equality

    Expected: ""
    Received: "
    inline
      11:114  error  <img> is missing required \"alt\" attribute  wcag/h37
      11:256  error  <img> is missing required \"alt\" attribute  wcag/h37
      11:389  error  <img> is missing required \"alt\" attribute  wcag/h37·
    ✖ 3 problems (3 errors, 0 warnings)
    "

      44 |   const { results } = htmlValidate.validateString(htmlText);
      45 |   const validationReport = stylish(results);
    > 46 |   expect(validationReport).toBe('');
         |                            ^
      47 | }
      48 |
      49 | module.exports = {

      at validateHTML (test-runner/jsdom-helpers.js:46:28)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:42:5)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        4.553 s
Ran all test suites matching /ex1-bookList.test.js/i.
2022-02-26 10:13:19 error: *** Spell Checker Report ***


2022-02-26 10:16:46 info: ----------------------------------------
2022-02-26 10:16:46 info: >>> Running Unit Test `ex1-bookList` <<<
2022-02-26 10:16:46 info: ----------------------------------------
2022-02-26 10:16:52 info: All unit tests passed.
2022-02-26 10:16:55 error: *** Spell Checker Report ***


2022-02-26 11:26:49 info: ---------------------------------------
2022-02-26 11:26:49 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-02-26 11:26:49 info: ---------------------------------------
2022-02-26 11:26:54 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    ✓ should be syntactically valid (119 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (8 ms)
    ✕ each <li> should have the CSS class `list-item` (1 ms)
    ✕ each <li> should rendered red (32 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 2 passed, 5 total
Snapshots:   0 total
Time:        3.215 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-02-26 11:26:56 error: *** Spell Checker Report ***


2022-02-26 11:28:01 info: ---------------------------------------
2022-02-26 11:28:01 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-02-26 11:28:01 info: ---------------------------------------
2022-02-26 11:28:07 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    ✓ should be syntactically valid (144 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (7 ms)
    ✕ each <li> should have the CSS class `list-item` (1 ms)
    ✕ each <li> should rendered red (43 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 2 passed, 5 total
Snapshots:   0 total
Time:        3.232 s, estimated 4 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-02-26 11:28:09 error: *** Spell Checker Report ***


2022-02-26 11:29:54 info: ---------------------------------------
2022-02-26 11:29:54 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-02-26 11:29:54 info: ---------------------------------------
2022-02-26 11:29:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    ✓ should be syntactically valid (124 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (3 ms)
    ✕ each <li> should have the CSS class `list-item` (2 ms)
    ✕ each <li> should rendered red (34 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 2 passed, 5 total
Snapshots:   0 total
Time:        3.567 s, estimated 4 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-02-26 11:30:02 error: *** Spell Checker Report ***


2022-02-26 11:30:51 info: ---------------------------------------
2022-02-26 11:30:51 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-02-26 11:30:51 info: ---------------------------------------
2022-02-26 11:30:56 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    ✓ should be syntactically valid (120 ms)
    ✓ should have all TODO comments removed
    ✓ the body font-family should be `Arial, sans-serif` (1 ms)
    ✕ each <li> should have the CSS class `list-item` (2 ms)
    ✕ each <li> should rendered red (35 ms)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 3 passed, 5 total
Snapshots:   0 total
Time:        3.078 s, estimated 4 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-02-26 11:30:58 error: *** Spell Checker Report ***


2022-02-26 11:31:49 info: ---------------------------------------
2022-02-26 11:31:49 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-02-26 11:31:49 info: ---------------------------------------
2022-02-26 11:31:54 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    ✓ should be syntactically valid (264 ms)
    ✓ should have all TODO comments removed
    ✕ the body font-family should be `Arial, sans-serif` (3 ms)
    ✕ each <li> should have the CSS class `list-item` (1 ms)
    ✕ each <li> should rendered red (34 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 2 passed, 5 total
Snapshots:   0 total
Time:        3.651 s, estimated 4 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-02-26 11:31:57 error: *** Spell Checker Report ***


2022-02-26 11:34:15 info: ---------------------------------------
2022-02-26 11:34:15 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-02-26 11:34:15 info: ---------------------------------------
2022-02-26 11:34:20 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    ✓ should be syntactically valid (116 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ the body font-family should be `Arial, sans-serif` (1 ms)
    ✕ each <li> should have the CSS class `list-item` (3 ms)
    ✕ each <li> should rendered red (36 ms)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 3 passed, 5 total
Snapshots:   0 total
Time:        3.043 s, estimated 4 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-02-26 11:34:22 error: *** Spell Checker Report ***


2022-02-26 11:41:57 info: ---------------------------------------
2022-02-26 11:41:57 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-02-26 11:41:57 info: ---------------------------------------
2022-02-26 11:42:04 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    ✓ should be syntactically valid (153 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ the body font-family should be `Arial, sans-serif` (1 ms)
    ✕ each <li> should have the CSS class `list-item` (2 ms)
    ✕ each <li> should rendered red (36 ms)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 3 passed, 5 total
Snapshots:   0 total
Time:        4.762 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-02-26 11:42:06 error: *** Spell Checker Report ***


2022-02-26 11:45:24 info: ---------------------------------------
2022-02-26 11:45:24 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-02-26 11:45:24 info: ---------------------------------------
2022-02-26 11:45:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    ✓ should be syntactically valid (128 ms)
    ✓ should have all TODO comments removed
    ✓ the body font-family should be `Arial, sans-serif` (1 ms)
    ✕ each <li> should have the CSS class `list-item` (3 ms)
    ✕ each <li> should rendered red (37 ms)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 3 passed, 5 total
Snapshots:   0 total
Time:        3.061 s, estimated 5 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-02-26 11:45:31 error: *** Spell Checker Report ***


2022-02-26 01:58:17 info: ---------------------------------------
2022-02-26 01:58:17 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-02-26 01:58:17 info: ---------------------------------------
2022-02-26 01:58:23 info: All unit tests passed.
2022-02-26 01:58:25 error: *** Spell Checker Report ***


2022-02-26 02:11:42 info: ------------------------------------------
2022-02-26 02:11:42 info: >>> Running Unit Test `ex3-hijackLogo` <<<
2022-02-26 02:11:42 info: ------------------------------------------
2022-02-26 02:11:45 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-hijackLogo.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex3-hijackLogo.test.js
  hijackLogo
    ✓ should have all TODO comments removed (2 ms)
    ✓ should set the `src` property
    ✕ should set the `srcset` property (1 ms)

  ● hijackLogo › should set the `srcset` property

    expect(received).toBeDefined()

    Received: undefined

      33 |
      34 |   test('should set the `srcset` property', () => {
    > 35 |     expect(state.srcset).toBeDefined();
         |                          ^
      36 |   });
      37 | });
      38 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex3-hijackLogo.test.js:35:26)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.52 s
Ran all test suites matching /ex3-hijackLogo.test.js/i.
2022-02-26 02:11:47 error: *** Spell Checker Report ***


2022-02-26 02:14:31 info: ------------------------------------------
2022-02-26 02:14:31 info: >>> Running Unit Test `ex3-hijackLogo` <<<
2022-02-26 02:14:31 info: ------------------------------------------
2022-02-26 02:14:35 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-hijackLogo.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex3-hijackLogo.test.js
  hijackLogo
    ✓ should have all TODO comments removed (1 ms)
    ✕ should set the `src` property (1 ms)
    ✓ should set the `srcset` property (1 ms)

  ● hijackLogo › should set the `src` property

    expect(received).toBeDefined()

    Received: undefined

      29 |
      30 |   test('should set the `src` property', () => {
    > 31 |     expect(state.src).toBeDefined();
         |                       ^
      32 |   });
      33 |
      34 |   test('should set the `srcset` property', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex3-hijackLogo.test.js:31:23)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.804 s, estimated 1 s
Ran all test suites matching /ex3-hijackLogo.test.js/i.
2022-02-26 02:14:37 error: *** Spell Checker Report ***


2022-02-26 02:16:13 info: ------------------------------------------
2022-02-26 02:16:13 info: >>> Running Unit Test `ex3-hijackLogo` <<<
2022-02-26 02:16:13 info: ------------------------------------------
2022-02-26 02:16:16 info: All unit tests passed.
2022-02-26 02:16:18 error: *** Spell Checker Report ***


