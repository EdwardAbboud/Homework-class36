2022-03-16 05:10:17 info: ---------------------------------------
2022-03-16 05:10:17 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-03-16 05:10:17 info: ---------------------------------------
2022-03-16 05:10:20 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable (1 ms)
    ✕ should have all TODO comments removed (1 ms)
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()` (1 ms)
    ✓ should take a single argument
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when called with a string argument (2 ms)
    ✓ should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.666 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-03-16 05:10:22 error: *** Spell Checker Report ***


2022-03-16 05:10:42 info: ---------------------------------------
2022-03-16 05:10:42 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-03-16 05:10:42 info: ---------------------------------------
2022-03-16 05:10:44 info: All unit tests passed.
2022-03-16 05:10:46 error: *** Spell Checker Report ***


2022-03-16 05:25:37 info: -------------------------------------------------
2022-03-16 05:25:37 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-03-16 05:25:37 info: -------------------------------------------------
2022-03-16 05:25:44 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✓ should exist and be executable (2 ms)
    ✕ should have all TODO comments removed (2 ms)
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls (5 ms)
    ✓ should call new Promise() (1 ms)
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should be a function that takes a single argument
    ✓ (9) should return a rejected promise with an Error object (1 ms)
    ✓ (10) should return a promise that resolves to "This is a double digit number!" (8 ms)
    ✓ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✓ (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 10 passed, 11 total
Snapshots:   0 total
Time:        1.355 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-03-16 05:25:46 error: *** Spell Checker Report ***


2022-03-16 05:28:48 info: -------------------------------------------------
2022-03-16 05:28:48 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-03-16 05:28:48 info: -------------------------------------------------
2022-03-16 05:28:50 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✕ should exist and be executable (2 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument (1 ms)
    ✓ `reject()` should be called with a one argument
    ✕ should be a function that takes a single argument (1 ms)
    ✕ (9) should return a rejected promise with an Error object (1 ms)
    ✕ (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (99) should return a promise that resolves to "This is a double digit number!"
    ✕ (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.576 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-03-16 05:28:52 error: *** Spell Checker Report ***


2022-03-16 05:29:37 info: -------------------------------------------------
2022-03-16 05:29:37 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-03-16 05:29:37 info: -------------------------------------------------
2022-03-16 05:29:39 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✕ should exist and be executable (3 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✕ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object
    ✕ (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.569 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-03-16 05:29:41 error: *** Spell Checker Report ***


2022-03-16 05:29:49 info: -------------------------------------------------
2022-03-16 05:29:49 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-03-16 05:29:49 info: -------------------------------------------------
2022-03-16 05:29:51 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✓ should exist and be executable (2 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument (1 ms)
    ✓ `reject()` should be called with a one argument
    ✓ should be a function that takes a single argument
    ✓ (9) should return a rejected promise with an Error object (1 ms)
    ✕ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    ✕ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✓ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Expected a double digit number but got 10]

      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
    > 75 |     return expect(promise).resolves.toEqual(
         |            ^
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );
      78 |   });

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:75:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Expected a double digit number but got 99]

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |            ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.556 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-03-16 05:29:53 error: *** Spell Checker Report ***


2022-03-16 05:30:24 info: -------------------------------------------------
2022-03-16 05:30:24 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-03-16 05:30:24 info: -------------------------------------------------
2022-03-16 05:30:26 info: All unit tests passed.
2022-03-16 05:30:28 error: *** Spell Checker Report ***


2022-03-16 05:43:30 info: ---------------------------------------
2022-03-16 05:43:30 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-03-16 05:43:30 info: ---------------------------------------
2022-03-16 05:43:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    ✓ should exist and be executable (5 ms)
    ✕ should have all TODO comments removed (1 ms)
    ✓ should call `new Promise()`
    ✕ `resolve()` should be called with a one argument (2 ms)
    ✓ `reject()` should be called with a one argument (1 ms)
    ✓ should resolve when the die settles successfully (2 ms)
    ✓ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        0.587 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-03-16 05:43:34 error: *** Spell Checker Report ***


2022-03-16 05:44:58 info: ---------------------------------------
2022-03-16 05:44:58 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-03-16 05:44:58 info: ---------------------------------------
2022-03-16 05:45:00 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    ✓ should exist and be executable (2 ms)
    ✕ should have all TODO comments removed (1 ms)
    ✓ should call `new Promise()`
    ✕ `resolve()` should be called with a one argument (2 ms)
    ✓ `reject()` should be called with a one argument (1 ms)
    ✓ should resolve when the die settles successfully (1 ms)
    ✓ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        0.428 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-03-16 05:45:02 error: *** Spell Checker Report ***


2022-03-16 05:45:31 info: ---------------------------------------
2022-03-16 05:45:31 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-03-16 05:45:31 info: ---------------------------------------
2022-03-16 05:45:34 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    ✓ should exist and be executable (2 ms)
    ✓ should have all TODO comments removed
    ✓ should call `new Promise()`
    ✕ `resolve()` should be called with a one argument (6 ms)
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when the die settles successfully (1 ms)
    ✓ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.822 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-03-16 05:45:36 error: *** Spell Checker Report ***


2022-03-16 05:46:10 info: ---------------------------------------
2022-03-16 05:46:10 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-03-16 05:46:10 info: ---------------------------------------
2022-03-16 05:46:12 info: All unit tests passed.
2022-03-16 05:46:14 error: *** Spell Checker Report ***


2022-03-16 05:47:33 info: ---------------------------------------
2022-03-16 05:47:33 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-03-16 05:47:33 info: ---------------------------------------
2022-03-16 05:47:33 info: Exercise has not yet been modified
2022-03-16 05:47:36 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    ✓ should exist and be executable (2 ms)
    ✕ should have all TODO comments removed (2 ms)
    ✕ should call `new Promise()`
    ✕ `resolve()` should be called with a one argument (1 ms)
    ✕ `reject()` should be called with a one argument
    ✕ should resolve when the die settles successfully (1 ms)
    ✕ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    TypeError: callback is not a function

      32 |     if (roll === randomRollsToDo) {
      33 |       // TODO replace "success" callback
    > 34 |       callback(null, value);
         |       ^
      35 |     }
      36 |
      37 |     // Schedule the next roll todo until no more rolls to do

      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:34:7)
      at cb (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:24)
      at 3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:7)
      at cb (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:24)
      at 3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 1 passed, 7 total
Snapshots:   0 total
Time:        1.09 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-03-16 05:47:38 error: *** Spell Checker Report ***


2022-03-16 05:57:33 info: ---------------------------------------
2022-03-16 05:57:33 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-03-16 05:57:33 info: ---------------------------------------
2022-03-16 05:57:35 info: All unit tests passed.
2022-03-16 05:57:37 error: *** Spell Checker Report ***


2022-03-17 03:03:26 info: --------------------------------------------
2022-03-17 03:03:26 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-03-17 03:03:26 info: --------------------------------------------
2022-03-17 03:03:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    ✓ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `rollDice` should not contain unneeded console.log calls
    ✕ should use `dice.map()` (2 ms)
    ✕ should use `Promise.all()`
    ✕ should resolve when all dice settle successfully
    ✕ should reject with an Error when a die rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should use `dice.map()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should use `dice.map()`', () => {
    > 40 |     expect(state.diceMap).toBeDefined();
         |                           ^
      41 |   });
      42 |
      43 |   test('should use `Promise.all()`', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:40:27)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      42 |
      43 |   test('should use `Promise.all()`', () => {
    > 44 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      45 |   });
      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:44:30)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    ReferenceError: Cannot access 'dice' before initialization

      28 |
      29 | function rollDice() {
    > 30 |   const dice = [1, 2, 3, 4, 5].map(dice.forEach((die) => rollDie(die)));
         |                                    ^
      31 | }
      32 |
      33 | function main() {

      at rollDice (3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:30:36)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:53:21)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 3 passed, 7 total
Snapshots:   0 total
Time:        0.673 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-03-17 03:03:31 error: *** Spell Checker Report ***


2022-03-17 03:14:12 info: --------------------------------------------
2022-03-17 03:14:12 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-03-17 03:14:12 info: --------------------------------------------
2022-03-17 03:14:14 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    ✓ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed
    ✓ `rollDice` should not contain unneeded console.log calls (1 ms)
    ✓ should use `dice.map()` (1 ms)
    ✕ should use `Promise.all()` (1 ms)
    ✕ should resolve when all dice settle successfully (1 ms)
    ✕ should reject with an Error when a die rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      42 |
      43 |   test('should use `Promise.all()`', () => {
    > 44 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      45 |   });
      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:44:30)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    TypeError: #<Promise> is not a function
        at Array.map (<anonymous>)

      29 | function rollDice() {
      30 |   const dice = [1, 2, 3, 4, 5];
    > 31 |   let allDie = dice.map(rollDie());
         |                     ^
      32 | }
      33 |
      34 | function main() {

      at rollDice (3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:31:21)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:53:21)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 4 passed, 7 total
Snapshots:   0 total
Time:        0.546 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
node:internal/process/promises:246
          triggerUncaughtException(err, true /* fromPromise */);
          ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "Error: Die 1 rolled off the table.
".] {
  code: 'ERR_UNHANDLED_REJECTION'
}
2022-03-17 03:14:16 error: *** Spell Checker Report ***


2022-03-17 03:21:07 info: --------------------------------------------
2022-03-17 03:21:07 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-03-17 03:21:07 info: --------------------------------------------
2022-03-17 03:21:20 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js (10.56 s)
  ex4-pokerDiceAll
    ✓ should exist and be executable (2 ms)
    ✓ should have all TODO comments removed
    ✓ `rollDice` should not contain unneeded console.log calls (1 ms)
    ✓ should use `dice.map()`
    ✕ should use `Promise.all()` (2 ms)
    ✕ should resolve when all dice settle successfully (5005 ms)
    ✕ should reject with an Error when a die rolls off the table (5001 ms)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      42 |
      43 |   test('should use `Promise.all()`', () => {
    > 44 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      45 |   });
      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:44:30)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      45 |   });
      46 |
    > 47 |   test('should resolve when all dice settle successfully', async () => {
         |   ^
      48 |     expect.assertions(4);
      49 |     expect(exported).toBeDefined();
      50 |

      at 3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:3
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:9:1)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    Die 1 rolled off the table.

      81 |           offTable = true;
      82 |         }
    > 83 |         reject(new Error(`Die ${die} rolled off the table.\n`));
         |                ^
      84 |       }
      85 |
      86 |       // If the dice settles (i.e. all mandated rolls are completed) we

      at rollOnce (3-UsingAPIs/helpers/pokerDiceRoller.js:83:16)
      at Timeout._onTimeout (3-UsingAPIs/helpers/pokerDiceRoller.js:96:26)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    Die 2 rolled off the table.

      81 |           offTable = true;
      82 |         }
    > 83 |         reject(new Error(`Die ${die} rolled off the table.\n`));
         |                ^
      84 |       }
      85 |
      86 |       // If the dice settles (i.e. all mandated rolls are completed) we

      at rollOnce (3-UsingAPIs/helpers/pokerDiceRoller.js:83:16)
      at Timeout._onTimeout (3-UsingAPIs/helpers/pokerDiceRoller.js:96:26)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    Die 3 rolled off the table.

      81 |           offTable = true;
      82 |         }
    > 83 |         reject(new Error(`Die ${die} rolled off the table.\n`));
         |                ^
      84 |       }
      85 |
      86 |       // If the dice settles (i.e. all mandated rolls are completed) we

      at rollOnce (3-UsingAPIs/helpers/pokerDiceRoller.js:83:16)
      at Timeout._onTimeout (3-UsingAPIs/helpers/pokerDiceRoller.js:96:26)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    Die 4 rolled off the table.

      81 |           offTable = true;
      82 |         }
    > 83 |         reject(new Error(`Die ${die} rolled off the table.\n`));
         |                ^
      84 |       }
      85 |
      86 |       // If the dice settles (i.e. all mandated rolls are completed) we

      at rollOnce (3-UsingAPIs/helpers/pokerDiceRoller.js:83:16)
      at Timeout._onTimeout (3-UsingAPIs/helpers/pokerDiceRoller.js:96:26)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    Die 5 rolled off the table.

      81 |           offTable = true;
      82 |         }
    > 83 |         reject(new Error(`Die ${die} rolled off the table.\n`));
         |                ^
      84 |       }
      85 |
      86 |       // If the dice settles (i.e. all mandated rolls are completed) we

      at rollOnce (3-UsingAPIs/helpers/pokerDiceRoller.js:83:16)
      at Timeout._onTimeout (3-UsingAPIs/helpers/pokerDiceRoller.js:96:26)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   });
      63 |
    > 64 |   test('should reject with an Error when a die rolls off the table', async () => {
         |   ^
      65 |     expect.assertions(3);
      66 |     expect(exported).toBeDefined();
      67 |

      at 3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:64:3
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:9:1)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 4 passed, 7 total
Snapshots:   0 total
Time:        10.621 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-03-17 03:21:22 error: *** Spell Checker Report ***


2022-03-17 03:25:26 info: --------------------------------------------
2022-03-17 03:25:26 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-03-17 03:25:26 info: --------------------------------------------
2022-03-17 03:25:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    ✓ should exist and be executable (1 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ `rollDice` should not contain unneeded console.log calls (1 ms)
    ✓ should use `dice.map()` (1 ms)
    ✕ should use `Promise.all()` (1 ms)
    ✕ should resolve when all dice settle successfully (1 ms)
    ✕ should reject with an Error when a die rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      42 |
      43 |   test('should use `Promise.all()`', () => {
    > 44 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      45 |   });
      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:44:30)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    TypeError: #<Promise> is not a function
        at Array.map (<anonymous>)

      29 | function rollDice() {
      30 |   const dice = [1, 2, 3, 4, 5];
    > 31 |   return dice.map(rollDie());
         |               ^
      32 | }
      33 |
      34 | function main() {

      at rollDice (3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:31:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:53:21)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 4 passed, 7 total
Snapshots:   0 total
Time:        0.544 s, estimated 11 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
node:internal/process/promises:246
          triggerUncaughtException(err, true /* fromPromise */);
          ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "Error: Die 1 rolled off the table.
".] {
  code: 'ERR_UNHANDLED_REJECTION'
}
2022-03-17 03:25:30 error: *** Spell Checker Report ***


2022-03-17 07:14:04 info: --------------------------------------------
2022-03-17 07:14:04 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-03-17 07:14:04 info: --------------------------------------------
2022-03-17 07:14:06 info: All unit tests passed.
2022-03-17 07:14:08 error: *** Spell Checker Report ***


2022-03-17 07:23:18 info: ----------------------------------------------
2022-03-17 07:23:18 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-03-17 07:23:18 info: ----------------------------------------------
2022-03-17 07:23:20 info: All unit tests passed.
2022-03-17 07:23:22 error: *** Spell Checker Report ***


